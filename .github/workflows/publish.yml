name: Publish

on:
  push:
    branches: [ "develop", "master" ]
    tags:
      - '*'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  maven:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Get tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Adjust maven version
        if: startsWith(github.ref, 'refs/tags/')
        run: mvn versions:set versions:update-child-modules -DnewVersion=${{ steps.vars.outputs.tag }} -DprocessAllModules
      - name: Deploy
        run: mvn -B deploy -Dorg.slf4j.simpleLogger.defaultLogLevel=INFO
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Submit Dependency Snapshot
        uses: advanced-security/maven-dependency-submission-action@v3
  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/psobiech/opengr8on
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=edge,branch=develop
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/0.') }}
            type=pep440,priority=899,pattern={{version}}
            type=ref,event=branch
            type=ref,event=pr
            type=schedule
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          target: app-runtime
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
